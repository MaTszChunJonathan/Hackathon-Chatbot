---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\jonat\Downloads\kompose.exe convert -f docker-compose.yml -o kubemanifests.yml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: kafka-1
  name: kafka-1
spec:
  ports:
    - name: "9092"
      port: 9092
      targetPort: 9092
  selector:
    io.kompose.service: kafka-1

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\jonat\Downloads\kompose.exe convert -f docker-compose.yml -o kubemanifests.yml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: mongodb
  name: mongodb
spec:
  ports:
    - name: "27017"
      port: 27017
      targetPort: 27017
  selector:
    io.kompose.service: mongodb

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\jonat\Downloads\kompose.exe convert -f docker-compose.yml -o kubemanifests.yml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: webapp
  name: webapp
spec:
  ports:
    - name: "3000"
      port: 3000
      targetPort: 3000
  selector:
    io.kompose.service: webapp

---
apiVersion: v1
kind: Service
metadata:
  annotations:
    kompose.cmd: C:\Users\jonat\Downloads\kompose.exe convert -f docker-compose.yml -o kubemanifests.yml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: zookeeper-1
  name: zookeeper-1
spec:
  ports:
    - name: "2181"
      port: 2181
      targetPort: 2181
  selector:
    io.kompose.service: zookeeper-1

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\jonat\Downloads\kompose.exe convert -f docker-compose.yml -o kubemanifests.yml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: kafka-1
  name: kafka-1
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka-1
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\jonat\Downloads\kompose.exe convert -f docker-compose.yml -o kubemanifests.yml
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: kafka-1
    spec:
      containers:
        - env:
            - name: KAFKA_ADVERTISED_LISTENERS
              value: INSIDE://kafka-1:9092,OUTSIDE://localhost:9093
            - name: KAFKA_AUTO_CREATE_TOPICS_ENABLE
              value: "true"
            - name: KAFKA_CREATE_TOPICS
              value: test-topic:1:1
            - name: KAFKA_INTER_BROKER_LISTENER_NAME
              value: INSIDE
            - name: KAFKA_LISTENERS
              value: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
            - name: KAFKA_LISTENER_SECURITY_PROTOCOL_MAP
              value: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
            - name: KAFKA_ZOOKEEPER_CONNECT
              value: zookeeper-1:2181
          image: wurstmeister/kafka
          name: kafka-1
          ports:
            - containerPort: 9092
              protocol: TCP
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\jonat\Downloads\kompose.exe convert -f docker-compose.yml -o kubemanifests.yml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: kafka-consumer
  name: kafka-consumer
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka-consumer
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\jonat\Downloads\kompose.exe convert -f docker-compose.yml -o kubemanifests.yml
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: kafka-consumer
    spec:
      containers:
        - env:
            - name: PYTHONUNBUFFERED
              value: "1"
          image: samurai/consumer
          name: kafka-consumer
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\jonat\Downloads\kompose.exe convert -f docker-compose.yml -o kubemanifests.yml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: kafka-producer
  name: kafka-producer
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: kafka-producer
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\jonat\Downloads\kompose.exe convert -f docker-compose.yml -o kubemanifests.yml
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: kafka-producer
    spec:
      containers:
        - env:
            - name: PYTHONUNBUFFERED
              value: "1"
          image: samurai/producer
          name: kafka-producer
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\jonat\Downloads\kompose.exe convert -f docker-compose.yml -o kubemanifests.yml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: mongodb
  name: mongodb
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: mongodb
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\jonat\Downloads\kompose.exe convert -f docker-compose.yml -o kubemanifests.yml
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: mongodb
    spec:
      containers:
        - image: mongo
          name: mongodb
          ports:
            - containerPort: 27017
              protocol: TCP
      restartPolicy: Always

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\jonat\Downloads\kompose.exe convert -f docker-compose.yml -o kubemanifests.yml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: webapp
  name: webapp
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: webapp
  strategy:
    type: Recreate
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\jonat\Downloads\kompose.exe convert -f docker-compose.yml -o kubemanifests.yml
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: webapp
    spec:
      containers:
        - env:
            - name: NODE_ENV
              value: development
          image: samurai/webapp
          name: webapp
          ports:
            - containerPort: 3000
              protocol: TCP
          volumeMounts:
            - mountPath: /app
              name: webapp-cm0
            - mountPath: /app/node_modules
              name: webapp-claim1
      restartPolicy: Always
      volumes:
        - configMap:
            name: webapp-cm0
          name: webapp-cm0
        - name: webapp-claim1
          persistentVolumeClaim:
            claimName: webapp-claim1

---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  labels:
    io.kompose.service: webapp-claim1
  name: webapp-claim1
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 100Mi

---
apiVersion: v1
data:
  docker-compose.yml: "services:\n#  zookeeper-1:\n#    container_name: zookeeper-1\n#    image: samurai/zookeeper:3.8.0\n#    build:\n#      context: ./zookeeper\n#    volumes:\n#    - ./config/zookeeper-1/zookeeper.properties:/kafka/config/zookeeper.properties\n#    - ./data/zookeeper-1/:/tmp/zookeeper/\n#    ports:\n#      - \"2181:2181\"\n#  kafka-1:\n#    container_name: kafka-1\n#    image: samurai/kafka:3.8.0\n#    build: \n#      context: .\n#    volumes:\n#    - ./config/kafka-1/server.properties:/kafka/config/server.properties\n#    - ./data/kafka-1/:/tmp/kafka-logs/\n#    ports:\n#      - \"9092:9092\"\n#    environment:\n#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092\n#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181\n#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'\n#      KAFKA_CREATE_TOPICS: \"test-topic:1:1\"\n#    depends_on:\n#      - mongodb \n  webapp:\n    build:\n      context: ./ai-chatbot\n      dockerfile: dockerfile\n    image: samurai/webapp\n    container_name: webapp\n    ports:\n      - \"3000:3000\"\n    volumes:\n      - .:/app\n      - /app/node_modules\n    environment:\n      - NODE_ENV=development\n#    command: pnpm dev\n  zookeeper-1:\n    image: wurstmeister/zookeeper\n    ports:\n      - \"2181:2181\"\n    container_name: zookeeper-1\n#    entrypoint: [\"/bin/sh\", \"-c\", \"while ! nc -z mongodb 27017; do sleep 1; done; /bin/sh /opt/zookeeper/bin/zkServer.sh start-foreground\"]\n  kafka-1:\n    container_name: kafka-1  \n    image: wurstmeister/kafka\n    ports:\n      - \"9092:9092\"\n    environment:\n      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-1:9092,OUTSIDE://localhost:9093\n      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT\n      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093\n      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE\n      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181\n      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'\n      KAFKA_CREATE_TOPICS: \"test-topic:1:1\"\n#    volumes:\n#    - ./config/kafka-1/server.properties:/kafka/config/server.properties\n#    - ./data/kafka-1/:/tmp/kafka-logs/\n    depends_on:\n      - mongodb\n#    entrypoint: [\"/bin/sh\", \"-c\", \"while ! nc -z mongodb 27017; do sleep 1; done; /bin/sh /opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/server.properties\"]     \n  kafka-producer:\n    container_name: kafka-producer\n    image: samurai/producer\n    build: \n      context: ./producer\n    depends_on:\n      - kafka-1\n      - mongodb\n#      - kafka-consumer\n#    entrypoint: [\"./wait-for-it.sh\", \"mongodb:27017\", \"--\", \"python\", \"producer.py\"]\n    environment:\n      - PYTHONUNBUFFERED=1\n  kafka-consumer:\n    container_name: kafka-consumer\n    image: samurai/consumer\n    build: \n      context: ./consumer\n    depends_on:\n      - kafka-1\n      - mongodb\n#      - kafka-producer\n#    entrypoint: [\"./wait-for-it.sh\", \"mongodb:27017\", \"--\", \"python\", \"consumer.py\"]\n    environment:\n      - PYTHONUNBUFFERED=1\n  mongodb:\n    image: mongo\n    container_name: mongodb\n#    environment:\n#      MONGO_INITDB_ROOT_USERNAME: admin\n#      MONGO_INITDB_ROOT_PASSWORD: adminpw\n    ports: \n      - '27017:27017'    "
kind: ConfigMap
metadata:
  labels:
    io.kompose.service: webapp
  name: webapp-cm0

---
apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
    kompose.cmd: C:\Users\jonat\Downloads\kompose.exe convert -f docker-compose.yml -o kubemanifests.yml
    kompose.version: 1.34.0 (cbf2835db)
  labels:
    io.kompose.service: zookeeper-1
  name: zookeeper-1
spec:
  replicas: 1
  selector:
    matchLabels:
      io.kompose.service: zookeeper-1
  template:
    metadata:
      annotations:
        kompose.cmd: C:\Users\jonat\Downloads\kompose.exe convert -f docker-compose.yml -o kubemanifests.yml
        kompose.version: 1.34.0 (cbf2835db)
      labels:
        io.kompose.service: zookeeper-1
    spec:
      containers:
        - image: wurstmeister/zookeeper
          name: zookeeper-1
          ports:
            - containerPort: 2181
              protocol: TCP
      restartPolicy: Always

