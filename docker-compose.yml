services:
#  zookeeper-1:
#    container_name: zookeeper-1
#    image: samurai/zookeeper:3.8.0
#    build:
#      context: ./zookeeper
#    volumes:
#    - ./config/zookeeper-1/zookeeper.properties:/kafka/config/zookeeper.properties
#    - ./data/zookeeper-1/:/tmp/zookeeper/
#    ports:
#      - "2181:2181"
#  kafka-1:
#    container_name: kafka-1
#    image: samurai/kafka:3.8.0
#    build: 
#      context: .
#    volumes:
#    - ./config/kafka-1/server.properties:/kafka/config/server.properties
#    - ./data/kafka-1/:/tmp/kafka-logs/
#    ports:
#      - "9092:9092"
#    environment:
#      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
#      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
#      KAFKA_CREATE_TOPICS: "test-topic:1:1"
#    depends_on:
#      - mongodb 
  webapp:
    build:
      context: ./gemini-chatbot
      dockerfile: dockerfile
    image: samurai/webapp
    container_name: webapp
    ports:
      - "3000:3000"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=development
      - AUTH_SECRET=b03d1449d339b7c90700e236a66a859e
      - GOOGLE_GENERATIVE_AI_API_KEY=AIzaSyB2P2_zzbqvx1BUYVqDRBp0F0w9gqThihY
      - KV_REST_API_READ_ONLY_TOKEN=ArkhAAIgcDEcaiOtZpnX1Zu6TEVNu-w-nZciQT2XBJKkatTf2ynefQ
      - KV_REST_API_TOKEN=AbkhAAIjcDFmZTY5MDVjMWQ3Zjg0MzFjYjEwZTgyNGYwZDJhZThiM3AxMA
      - KV_REST_API_URL=https://precious-octopus-47393.upstash.io
      - KV_URL=redis://default:AbkhAAIjcDFmZTY5MDVjMWQ3Zjg0MzFjYjEwZTgyNGYwZDJhZThiM3AxMA@precious-octopus-47393.upstash.io:6379

#    command: pnpm dev
  zookeeper-1:
    image: wurstmeister/zookeeper
    ports:
      - "2181:2181"
    container_name: zookeeper-1
#    entrypoint: ["/bin/sh", "-c", "while ! nc -z mongodb 27017; do sleep 1; done; /bin/sh /opt/zookeeper/bin/zkServer.sh start-foreground"]
  kafka-1:
    container_name: kafka-1  
    image: wurstmeister/kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka-1:9092,OUTSIDE://localhost:9093
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9093
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-1:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_CREATE_TOPICS: "test-topic:1:1"
#    volumes:
#    - ./config/kafka-1/server.properties:/kafka/config/server.properties
#    - ./data/kafka-1/:/tmp/kafka-logs/
    depends_on:
      - mongodb
#    entrypoint: ["/bin/sh", "-c", "while ! nc -z mongodb 27017; do sleep 1; done; /bin/sh /opt/kafka/bin/kafka-server-start.sh /opt/kafka/config/server.properties"]     
  kafka-producer:
    container_name: kafka-producer
    image: samurai/producer
    build: 
      context: ./producer
    depends_on:
      - kafka-1
      - mongodb
#      - kafka-consumer
#    entrypoint: ["./wait-for-it.sh", "mongodb:27017", "--", "python", "producer.py"]
    environment:
      - PYTHONUNBUFFERED=1
  kafka-consumer:
    container_name: kafka-consumer
    image: samurai/consumer
    build: 
      context: ./consumer
    depends_on:
      - kafka-1
      - mongodb
#      - kafka-producer
#    entrypoint: ["./wait-for-it.sh", "mongodb:27017", "--", "python", "consumer.py"]
    environment:
      - PYTHONUNBUFFERED=1
  mongodb:
    image: mongo
    container_name: mongodb
#    environment:
#      MONGO_INITDB_ROOT_USERNAME: admin
#      MONGO_INITDB_ROOT_PASSWORD: adminpw
    ports: 
      - '27017:27017'
  rag:
    image: rag
    container_name: rag
    build:
      context: ./rag
    environment:
      - PYTHONUNBUFFERED=1